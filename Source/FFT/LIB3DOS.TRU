EXTERNAL             !LIB3DOS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX4( Z1$ )  DIM menu$(0 to 1, 0 to 8)    !dimensioning for two menus, APPLE and PARAMETERS MENU  MAT READ menu$                !loading the data for the menus  DATA "", "Info Page...", "", "", "", "", "", "", ""  DATA       PARAMETERS MENU          !TITLE OF MENU BAR  DATA       Continue @C  DATA       @  DATA       Change N @N  DATA       Change T @T  DATA       Change MODE @D  DATA       Change TYPE @P  DATA       @  DATA       Quit @Q  CALL TW_menu_set(menu$)       !remove current menus, install menu1$  DO    LET CYCLEFLAG = 0    DO           ! Here's our event loop      CALL tw_event(0,type1$,window1,x1,x2)      SELECT CASE type1$      CASE "MENU"        !        ! Note what was selected        !        LET mitem$ = menu$(x1,x2)        LET p = Pos(mitem$,"@")        IF p > 0 then LET mitem$[p:maxnum] = ""   ! strip shortcuts        LET mtitle$ = menu$(x1,0)        IF X1 = 0 AND X2 = 1 THEN          CALL TW_MENU_CLEAR          CALL BOX138          CALL TW_menu_set(menu$)          LET CYCLEFLAG = 1        ELSE IF X1 = 1 THEN          IF  X2 = 1 THEN            LET Z1$ = "C"          ELSE IF X2 = 3 THEN            LET Z1$ = "N"          ELSE IF X2 = 4 THEN            LET Z1$ = "T"          ELSE IF X2 = 5 THEN            LET Z1$ = "D"          ELSE IF X2 = 6 THEN            LET Z1$ = "P"          ELSE IF X2 = 8 THEN            LET Z1$ = "Q"          END IF        END IF        EXIT DO      CASE "SINGLE"        CALL MACSYSBEEP(1)      CASE "DOUBLE"        CALL MACSYSBEEP(1)      CASE ELSE          !          ! Ignore other events          !      END SELECT    LOOP  LOOP WHILE CYCLEFLAG = 1  CALL TW_MENU_CLEAREND SUB !BOX4!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX5( Z1$ )  DIM menu$(0 to 1, 0 to 6)    !dimensioning for two menus, APPLE and PARAMETERS MENU  MAT READ menu$                !loading the data for the menus  DATA "", "Info Page...", "", "", "", "", ""  DATA       PARAMETERS MENU          !TITLE OF MENU BAR  DATA       Continue @C  DATA       @  DATA       Change N @N  DATA       Change MODE @D  DATA       @  DATA       Quit @Q  CALL TW_menu_set(menu$)       !remove current menus, install menu1$  DO    LET CYCLEFLAG = 0    DO        ! Here's our event loop      CALL tw_event(0,type1$,window1,x1,x2)      SELECT CASE type1$      CASE "MENU"        !        ! Note what was selected        !        LET mitem$ = menu$(x1,x2)        LET p = Pos(mitem$,"@")        IF p > 0 then LET mitem$[p:maxnum] = ""   ! strip shortcuts        LET mtitle$ = menu$(x1,0)        IF X1 = 0 AND X2 = 1 THEN          CALL BOX138          LET CYCLEFLAG = 1        ELSE IF X1 = 1 THEN          IF  X2 = 1 THEN            LET Z1$ = "C"          ELSE IF X2 = 3 THEN            LET Z1$ = "N"          ELSE IF X2 = 4 THEN            LET Z1$ = "D"          ELSE IF X2 = 6 THEN            LET Z1$ = "Q"          END IF        END IF        EXIT DO      CASE "SINGLE"        CALL MACSYSBEEP(1)      CASE "DOUBLE"        CALL MACSYSBEEP(1)      CASE ELSE           !           ! Ignore other events           !      END SELECT    LOOP  LOOP WHILE CYCLEFLAG = 1  CALL TW_MENU_CLEAREND SUB !BOX5!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX6( N, NN, FLAGN, NZEROFLAG )  DECLARE DEF EVAL  SET CURSOR "ON"  DO    LET FLAGN = 0    LET MESSAGE$ = "THE CURRENT VALUE OF  N"    LET MESSAGE$ = MESSAGE$ & "|" & "   IS SHOWN BELOW..."    LET MESSAGE$ = MESSAGE$ & "|" & "|" & "WHAT IS THE REQUIRED VALUE ?"    LET MESSAGE$ = MESSAGE$ & "|" & "         (1 < N < 100000)"    IF NZEROFLAG = 1 THEN      LET BUTTON$ = "GO "    ELSE IF NZEROFLAG = 0 THEN      LET BUTTON$ = "GO | QUIT"    END IF    LET DEFAULT = 1    IF CAT = 1 THEN CALL MACSYSBEEP(1)    DO      LET TEXT$ = STR$(N)      CALL TW_DINPUT(MESSAGE$, BUTTON$, DEFAULT, TEXT$, RESULT)      WHEN ERROR IN        IF RESULT = 1 THEN          LET NN = EVAL(TEXT$)        ELSE IF RESULT = 2 THEN          LET FLAGN = 1        END IF        EXIT DO      USE        CALL MACSYSBEEP(1)      END WHEN    LOOP    IF FLAGN = 0 THEN      IF NN = INT(NN) AND NN > 1 AND NN < 100000 THEN LET RAT = 1    END IF    LET CAT = 1  LOOP UNTIL RAT = 1 OR FLAGN = 1  IF FLAGN = 0 THEN LET N = NN  SET CURSOR "OFF"END SUB !BOX6!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX41( N, FORM$, NU )  IF FORM$ = "POWEROF2" THEN    LET MESSAGE$ = STR$(N) & " IS AN EXACT POWER OF 2|IT IS 2 RAISED TO THE POWER " & STR$(NU)  ELSE IF FORM$ = "PRIME" THEN    LET MESSAGE$ = STR$(N) & " IS A PRIME NUMBER|YOU SURE ARE DOING IT THE HARD WAY !"    LET ICON = 1  END IF  LET BUTTON$ = "GO"  LET DEFAULT = 1  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)END SUB !BOX41!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX42( N, Q, R() )  LET BF$ = ""  FOR K = 1 TO Q - 1    LET BF$ = BF$ & STR$( R(K) ) & ", "  NEXT K  LET ZF$ = STR$( R(Q) )  LET GF$ = BF$ & ZF$  LET MESSAGE$ = STR$(N) & " IS A COMPOSITE NUMBER... |ITS FACTORS ARE " & GF$  LET BUTTON$ = "GO"  LET DEFAULT = 1  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)END SUB !BOX42!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX7( MODE$, SDR$, NZEROFLAG )  IF MODE$ = "DISC" THEN    LET MESSAGE$ = "SELECT MODE...|MODE IS CURRENTLY SET AS DISCRETE"    LET BUTTON$ = "SAMPLED|DISCRETE|QUIT"  ELSE IF MODE$ = "SAMP" THEN    LET MESSAGE$ = "SELECT MODE...|MODE IS CURRENTLY SET AS SAMPLED"    LET BUTTON$ = "SAMPLED|DISCRETE|QUIT"  ELSE    LET MESSAGE$ = "SELECT MODE...|MODE IS CURRENTLY NOT SET"    LET BUTTON$ = "SAMPLED|DISCRETE"  END IF  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)  IF RESULT = 1 THEN    LET SDR$ = "S"  ELSE IF RESULT = 2 THEN    LET SDR$ = "D"    LET NZEROFLAG = 0  ELSE IF RESULT = 3 THEN    LET SDR$ = "Q"  END IFEND SUB !BOX7!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX8( T, TT, FLAGT, NZEROFLAG )  DECLARE DEF EVAL  SET CURSOR "ON"  LET FLAGT = 0  LET MESSAGE$ = "THE CURRENT VALUE OF  T"  LET MESSAGE$ = MESSAGE$ & "|" & "   IS SHOWN BELOW..."  LET MESSAGE$ = MESSAGE$ & "|" & "|" & "WHAT IS THE REQUIRED VALUE ?"  LET MESSAGE$ = MESSAGE$ & "|" & "   (A POSITIVE NUMBER)"  IF NZEROFLAG = 1 THEN    LET BUTTON$ = "GO"  ELSE IF NZEROFLAG = 0 THEN    LET BUTTON$ = "GO | QUIT"  END IF  LET DEFAULT = 1  DO    IF RAT = 1 THEN CALL MACSYSBEEP(1)    DO      LET TEXT$ = STR$(T)      CALL TW_DINPUT(MESSAGE$, BUTTON$, DEFAULT, TEXT$, RESULT)      WHEN ERROR IN        IF RESULT = 1 THEN LET TT = EVAL(TEXT$)        EXIT DO      USE        CALL MACSYSBEEP(1)      END WHEN    LOOP    IF RESULT = 1 THEN      IF TT > 0 THEN LET HAT = 1    ELSE IF RESULT = 2 THEN      LET FLAGT = 1    END IF    LET RAT = 1  LOOP UNTIL HAT = 1 OR RESULT = 2  IF RESULT = 1 THEN LET T = TT  LET NZEROFLAG = 0  SET CURSOR "OFF"END SUB !BOX8!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX9( TYPE$, SGR$ )  IF TYPE$ = "PER" THEN    LET MESSAGE$ = "SELECT TYPE...|TYPE IS CURRENTLY SET AS PERIODIC"    LET BUTTON$ = "PERIODIC|PULSE|QUIT"  ELSE IF TYPE$ = "PUL" THEN    LET MESSAGE$ = "SELECT TYPE...|TYPE IS CURRENTLY SET AS PULSE"    LET BUTTON$ = "PERIODIC|PULSE|QUIT"  ELSE    LET MESSAGE$ = "SELECT TYPE...|TYPE IS CURRENTLY NOT SET"    LET BUTTON$ = "PERIODIC|PULSE"  END IF  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)  IF RESULT = 1 THEN    LET SGR$ = "R"  ELSE IF RESULT = 2 THEN    LET SGR$ = "L"  ELSE IF RESULT = 3 THEN    LET SGR$ = "Q"  END IFEND SUB !BOX9!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX40( MESG$, Z0$, NN )  DECLARE DEF EVAL  SET CURSOR "ON"  CALL MACSYSBEEP(1)  DO    LET LOOPIT = 0    CLEAR    SET WINDOW 0, 81, 0, 31    LET B = 9    PLOT 5,   B     ; 5,    29    ; 75,   29  ;  75,B  ;  5,B    PLOT 5.5, B-.05 ; 75.1, B-.05 ; 75.1, 28.75    PLOT 5.5, B-.1  ; 75.2, B-.1  ; 75.2, 28.75    PLOT 5.5, B-.15 ; 75.3, B-.15 ; 75.3, 28.75    SET TEXT JUSTIFY "CENTER", "HALF"    PLOT TEXT, AT 40,27:"AN ERROR HAS OCCURRED. THE ERROR MESSAGE READS:"    PLOT TEXT, AT 40,25:"------------------------------------------------------"    PLOT TEXT, AT 40,24:MESG$    PLOT TEXT, AT 40,23:"------------------------------------------------------"    PLOT TEXT, AT 40,21:"WE WERE ABLE TO TRAP IT THIS TIME..."    PLOT TEXT, AT 40,20:"...SOMETIMES WE WILL NOT BE ABLE TO."    PLOT TEXT, AT 40,18:"HERE ARE YOUR OPTIONS FOR CLEARING THE PROBLEM:"    PLOT TEXT, AT 40,16:"(A) EITHER: USE AN EXACT POWER OF 2 FOR  N."    PLOT TEXT, AT 40,15:"OR: REDUCE THE VALUE OF  N."    PLOT TEXT, AT 40,14:"OR: BOTH."    PLOT TEXT, AT 40,12:"(B) EXIT AND ASSIGN MORE MEMORY TO  FFT.CC."    PLOT TEXT, AT 40,11:"(IF IN DOUBT, REFER TO README_1.CC)"    PLOT TEXT, AT 40,6:"---> press space bar to continue <---"    DO      GET KEY INKEY      IF INKEY = 32 THEN        LET EXIT2 = 1      ELSE        CALL MACSYSBEEP(1)      END IF    LOOP UNTIL EXIT2 = 1    SET CURSOR "ON"    LET ICON = 2    LET MESSAGE$ = "ENTER a new value for N"    LET MESSAGE$ = MESSAGE$ & "|" & "   (1 < N < 100000)"    LET MESSAGE$ = MESSAGE$ & "|" & "|" & "or EXIT to assign more memory"    LET MESSAGE$ = MESSAGE$ & "|" & "|" & "or BACK to read the previous frame"    LET BUTTON$ = "GO|EXIT|BACK"    LET DEFAULT = 1    LET CAT = 0    DO      IF CAT = 1 THEN CALL MACSYSBEEP(1)      CALL TW_DINPUT(MESSAGE$, BUTTON$, DEFAULT, TEXT$, RESULT)      IF RESULT = 1 THEN        WHEN ERROR IN          LET NN = EVAL(TEXT$)          IF NN = INT(NN) AND NN > 0 AND NN < 100000 THEN            LET Z0$ = "A"            EXIT DO          ELSE            LET CAT = 1          END IF        USE          LET CAT = 1        END WHEN      ELSE IF RESULT = 2 THEN        LET Z0$ = "B"        EXIT DO      ELSE IF RESULT = 3 THEN        LET LOOPIT = 1        EXIT DO      END IF    LOOP  LOOP WHILE LOOPIT = 1  CLEAR  SET CURSOR "OFF"END SUB !BOX40!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOXBIGN  LET MESSAGE$ = "YOU ARE RUNNING WITH A LARGE VALUE FOR  N"  LET MESSAGE$ = MESSAGE$ & "|" & "|" & "IF YOUR SCREEN SAVER COMES ON..."  LET MESSAGE$ = MESSAGE$ & "|" & "|" & "JUST MOVE THE MOUSE TO GET A REFRESH "  LET MESSAGE$ = MESSAGE$ & "|" & "---> DON'T CLICK IT <---"  LET MESSAGE$ = MESSAGE$ & "|" & "THAT WILL ONLY DELAY THE REFRESH"  LET ICON = 2  LET BUTTON$ = "GO"  LET DEFAULT = 1  CALL TW_DWARN( ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT )END SUB !BOXBIGN!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX12( N, ORG$, ORG2$, X2FLAG, FFT2FLAG, TYPE$, MODE$, PULSESCALE, KILLSWITCHFLAG )  LET TWOFLAG = 0  LET THREEFLAG = 0  IF X2FLAG = 1 OR FFT2FLAG = 1 THEN    LET TWOFLAG = 1  END IF  IF MODE$ = "SAMP" AND TYPE$ = "PUL" THEN    LET THREEFLAG = 1  END IF  DECLARE DEF TW_wmake          !DEFINITION OF F'n to open a window  LET window2 = TW_wmake("immune")  IF TWOFLAG = 0 AND THREEFLAG = 0 THEN    CALL TW_wset_current(window2,.35,.65,.1327, .36)    CALL TW_wset_visible(window2,1)    CALL tw_wswitch(window2)    SET WINDOW 29, 51, 22, 29    SET TEXT JUSTIFY "CENTER", "HALF"    LET Q = 40  ELSE IF TWOFLAG = 1 AND THREEFLAG = 0 THEN    CALL TW_wset_current(window2,.2,.8,.1327, .36)    CALL TW_wset_visible(window2,1)    CALL tw_wswitch(window2)    SET WINDOW 18, 62, 22, 29    SET TEXT JUSTIFY "CENTER", "HALF"    LET B = 22    LET U = 40    LET Q = 29    LET R = 51    PLOT U,B ; U,29  ELSE IF TWOFLAG = 0 AND THREEFLAG = 1 THEN    CALL TW_wset_current(window2,.2,.8,.1327, .36)    CALL TW_wset_visible(window2,1)    CALL tw_wswitch(window2)    SET WINDOW 18, 62, 22, 29    SET TEXT JUSTIFY "CENTER", "HALF"    LET B = 22    LET V = 40    LET Q = 29    LET S = 51    PLOT V,B ; V,29  ELSE IF TWOFLAG = 1 AND THREEFLAG = 1 THEN    CALL TW_wset_current(window2,.1,.9,.1327, .36)    CALL TW_wset_visible(window2,1)    CALL tw_wswitch(window2)    SET WINDOW 7, 73, 22, 29    SET TEXT JUSTIFY "CENTER", "HALF"    LET B = 22    LET U = 29    LET V = 51    LET Q = 18    LET R = 40    LET S = 62    PLOT U,B ; U,29    PLOT V,B ; V,29  END IF  DO    LET SKIPOUT = 0    PLOT TEXT, AT Q,28:"THE X AND Y"    PLOT TEXT, AT Q,27:"ORIGINS ARE"    BOX CLEAR Q-4, Q+4, 24, 26    IF ORG$ = "C" THEN      PLOT TEXT, AT Q,25:"CENTER"    ELSE IF ORG$ = "L" THEN      PLOT TEXT, AT Q,25:"LEFT"    END IF    PLOT TEXT, AT Q,23:"TOGGLE ... T"    IF TWOFLAG = 1 THEN      PLOT TEXT, AT R,28:"THE X2 AND Y2"      PLOT TEXT, AT R,27:"ORIGINS ARE"      BOX CLEAR R-4, R+4, 24, 26      IF ORG2$ = "C" THEN        PLOT TEXT, AT R,25:"CENTER"      ELSE IF ORG2$ = "L" THEN        PLOT TEXT, AT R,25:"LEFT"      END IF      PLOT TEXT, AT R,23:"TOGGLE ... T2"    END IF    IF THREEFLAG = 1 THEN      PLOT TEXT, AT S,28:"THE PULSE IS"      BOX CLEAR S-8, S+8, 24, 26      IF PULSESCALE = 1 THEN        PLOT TEXT, AT S,25:"SINGLE PULSE"      ELSE IF PULSESCALE = 2 THEN       PLOT TEXT, AT S,25:"ETERNAL TRAIN"      END IF      PLOT TEXT, AT S,23:"TOGGLE ... T3"    END IF    IF TWOFLAG = 0 AND THREEFLAG = 0 THEN      LET BUTTON$ = "T|EXIT"      LET COND = 1    ELSE IF TWOFLAG = 1 AND THREEFLAG = 0 THEN      LET BUTTON$ = "T|T2|EXIT"      LET COND = 2    ELSE IF TWOFLAG = 0 AND THREEFLAG = 1 THEN      LET BUTTON$ = "T|T3|EXIT"      LET COND = 3    ELSE IF TWOFLAG = 1 AND THREEFLAG = 1 THEN      LET BUTTON$ = "T|T2|T3|EXIT"      LET COND = 4    END IF    LET DEFAULT = 0    DO      LET CYCLE = 0      LET TORG$  = ORG$      LET TORG2$ = ORG2$      CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)      IF (COND = 1 AND RESULT = 1) OR ((COND = 2 OR COND = 3) AND (RESULT = 1 OR RESULT = 2)) OR (COND = 4 AND (RESULT = 1 OR RESULT = 2 OR RESULT = 3 )) THEN        IF RESULT = 1 THEN          IF ORG$ = "L" THEN            LET TORG$ = "C"          ELSE IF ORG$ = "C" THEN            LET TORG$ = "L"          END IF        ELSE IF (COND = 2 OR COND = 4) AND RESULT = 2 THEN          IF ORG2$ = "L" THEN            LET TORG2$ = "C"          ELSE IF ORG2$ = "C" THEN            LET TORG2$ = "L"          END IF        ELSE IF (COND = 3 AND RESULT = 2) OR (COND = 4 AND RESULT = 3)  THEN          IF PULSESCALE = 1 THEN            LET PULSESCALE = 2          ELSE IF PULSESCALE = 2 THEN            LET PULSESCALE = 1          END IF        END IF        IF (TORG$ = "C" OR TORG2$ = "C") AND N/2 <> INT(N/2) THEN          CALL MACSYSBEEP(1)          LET ICON2 = 1          LET MESSAGE2$ = "SORRY, THE ORIGIN CAN ONLY BE IN THE CENTER|  WHEN  N  IS EVEN"          LET BUTTON2$ = "GO"          LET DEFAULT2 = 1          CALL TW_DWARN(ICON2, MESSAGE2$, BUTTON2$, DEFAULT2, RESULT2)          LET CYCLE = 1        END IF      ELSE IF (COND = 1 AND RESULT = 2) OR ((COND = 2 OR COND = 3) AND RESULT = 3) OR (COND = 4 AND RESULT = 4) THEN        LET SKIPOUT = 1      END IF      IF CYCLE = 0 THEN        LET ORG$  = TORG$        LET ORG2$ = TORG2$      END IF    LOOP WHILE CYCLE = 1  LOOP UNTIL SKIPOUT = 1  LET KILLSWITCHFLAG = 1END SUB !BOX12!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX17( OPTION$, MODE$, TYPE$, XFLAG, X2FLAG, REALFLAGX, FFTFLAG, FFT2FLAG, IFFTFLAG, REALFLAGIFFT )  DIM MENU$(0:1,0:1)       !dimensioning for two menus, APPLE and PRIMARY PLOTS  DIM CC$(0:1,0:1)         !required later for transposing  IF X2FLAG = 0 AND FFT2FLAG = 0 THEN    DIM LIST$(1)             !to hold the primary ID list    LET COL = 1  ELSE IF X2FLAG <> 0 OR FFT2FLAG <> 0  THEN    MAT REDIM MENU$(0:1,0:2)       !dimensioning for three menus, APPLE, PRIMARY and SECONDARY    MAT REDIM CC$(0:2,0:1)         !required later for transposing    DIM LIST2$(1)                  !to hold the secondary ID list    LET COL = 2  END IF  LET MENU$(1,0) = "Info Page..."  LET L = 1                    !NOW CREATING PRIMARY PLOTS MENU  LET DIMFLAG = 0  MAT REDIM MENU$(0:L,0:COL)  MAT REDIM LIST$(L)  LET MENU$(0,1) = "PRIMARY PLOTS"  IF XFLAG = 1 OR X2FLAG = 1 THEN    LET DIMFLAG = 1    IF REALFLAGX = 1 THEN      LET MENU$(L,1) =   "X vector @A"      LET LIST$(L) = "A"      LET L = L+1    ELSE IF REALFLAGX = 0 THEN      LET MENU$(L,1) =   "Real part of X @A"      LET LIST$(L) = "A"      LET L = L+1      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) =   "Imag part of X @B"      MAT REDIM LIST$(L)      LET LIST$(L) = "B"      LET L = L+1      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) =  "Modulus of X @C"      MAT REDIM LIST$(L)      LET LIST$(L) = "C"      LET L = L+1    END IF  END IF  IF FFTFLAG = 1 OR FFT2FLAG = 1 THEN    IF DIMFLAG = 1 THEN      MAT REDIM MENU$(0:L,0:COL)    END IF    LET DIMFLAG = 1    LET MENU$(L,1) = "@"    LET L = L+1    MAT REDIM MENU$(0:L,0:COL)    LET MENU$(L,1) =   "Real part of F @D"    MAT REDIM LIST$(L)    LET LIST$(L) = "D"    LET L = L+1    MAT REDIM MENU$(0:L,0:COL)    LET MENU$(L,1) =   "Imag part of F @E"    MAT REDIM LIST$(L)    LET LIST$(L) = "E"    LET L = L+1    IF MODE$ = "SAMP" THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Magnitude spectrum @F"      MAT REDIM LIST$(L)      LET LIST$(L) = "F"      LET L = L+1    ELSE IF MODE$ = "DISC" THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Modulus of F @F"      MAT REDIM LIST$(L)      LET LIST$(L) = "F"      LET L = L+1    END IF    IF MODE$ = "SAMP" THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Phase spectrum @G"      MAT REDIM LIST$(L)      LET LIST$(L) = "G"      LET L = L+1    ELSE IF MODE$ = "DISC" THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Phase of F @G"      MAT REDIM LIST$(L)      LET LIST$(L) = "G"      LET L = L+1    END IF    IF MODE$ = "SAMP" AND TYPE$ = "PER" THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Power spectrum @H"      MAT REDIM LIST$(L)      LET LIST$(L) = "H"      LET L = L+1    ELSE IF MODE$ = "SAMP" AND TYPE$ = "PUL" THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Energy spectrum @H"      MAT REDIM LIST$(L)      LET LIST$(L) = "H"      LET L = L+1    ELSE IF MODE$ = "DISC" THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Mod F squared @H"      MAT REDIM LIST$(L)      LET LIST$(L) = "H"      LET L = L+1    END IF  END IF  IF IFFTFLAG = 1 THEN    IF DIMFLAG = 1 THEN      MAT REDIM MENU$(0:L,0:COL)    END IF    LET MENU$(L,1) = "@"    LET L = L+1    IF REALFLAGIFFT = 1 THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Y vector @I"      MAT REDIM LIST$(L)      LET LIST$(L) = "I"      LET L = L+1    ELSE IF REALFLAGIFFT = 0 THEN      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Real part of Y @I"      MAT REDIM LIST$(L)      LET LIST$(L) = "I"      LET L = L+1      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Imag part of Y @J"      MAT REDIM LIST$(L)      LET LIST$(L) = "J"      LET L = L+1      MAT REDIM MENU$(0:L,0:COL)      LET MENU$(L,1) = "Modulus of Y @K"      MAT REDIM LIST$(L)      LET LIST$(L) = "K"      LET L = L+1    END IF  END IF  MAT REDIM MENU$(0:L,0:COL)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:COL)  LET MENU$(L,1) = "Toggle @L"  MAT REDIM LIST$(L)  LET LIST$(L) = "L"  LET L = L+1  MAT REDIM MENU$(0:L,0:COL)  LET MENU$(L,1) = "Quit @Q"  MAT REDIM LIST$(L)  LET LIST$(L) = "Q"  IF COL = 2 THEN              !NOW CREATING SECONDARY PLOTS MENU    MAT REDIM LIST2$(L)    LET M = 1    LET MENU$(0,2) = "SECONDARY PLOTS"    IF X2FLAG = 1 THEN      IF REALFLAGX = 1 THEN        LET MENU$(M,2) =   "X2 vector @S"        LET LIST2$(M) = "A2"        LET M = M +1      ELSE IF REALFLAGX = 0 THEN        LET MENU$(M,2) =   "Real part of X2 @S"        LET LIST2$(M) = "A2"        LET M = M +1        LET MENU$(M,2) =   "Imag part of X2 @T"        LET LIST2$(M) = "B2"        LET M = M +1        LET MENU$(M,2) =  "Modulus of X2 @U"        LET LIST2$(M) = "C2"        LET M = M +1      END IF    END IF    IF FFT2FLAG = 1 THEN      LET MENU$(M,2) = "@"      LET M = M +1      LET MENU$(M,2) =   "Real part of F2 @V"      LET LIST2$(M) = "D2"      LET M = M +1      LET MENU$(M,2) =   "Imag part of F2 @W"      LET LIST2$(M) = "E2"      LET M = M +1      IF MODE$ = "SAMP" THEN        LET MENU$(M,2) = "Magnitude spectrum @M"        LET LIST2$(M) = "F2"        LET M = M +1      ELSE IF MODE$ = "DISC" THEN        LET MENU$(M,2) = "Modulus of F2 @M"        LET LIST2$(M) = "F2"        LET M = M +1      END IF      IF MODE$ = "SAMP" THEN        LET MENU$(M,2) = "Phase spectrum @P"        LET LIST2$(M) = "G2"        LET M = M +1      ELSE IF MODE$ = "DISC" THEN        LET MENU$(M,2) = "Phase of F2 @P"        LET LIST2$(M) = "G2"        LET M = M +1      END IF      IF MODE$ = "SAMP" AND TYPE$ = "PER" THEN        LET MENU$(M,2) = "Power spectrum @U"        LET LIST2$(M) = "H2"        LET M = M +1      ELSE IF MODE$ = "SAMP" AND TYPE$ = "PUL" THEN        LET MENU$(M,2) = "Energy spectrum @U"        LET LIST2$(M) = "H2"        LET M = M +1      ELSE IF MODE$ = "DISC" THEN        LET MENU$(M,2) = "Mod F squared @U"        LET LIST2$(M) = "H2"        LET M = M +1      END IF    END IF    LET MENU$(M,2) = "@"    LET M = M +1    LET MENU$(M,2) = "Toggle @L"    LET LIST2$(M) = "L"    LET M = M +1    LET MENU$(M,2) = "Quit @Q"    LET LIST2$(M) = "Q"  END IF  !  !now transposing  !  MAT REDIM CC$(0:COL,0:L)  FOR I = 0 TO L    FOR J = 0 TO COL      LET CC$(J,I) = MENU$(I,J)    NEXT J  NEXT I  MAT REDIM MENU$(0:COL,0:L)  MAT MENU$ = CC$  DO    LET CYCLEFLAG = 0    CALL TW_menu_set(menu$)       !remove current menus, install menu$    DO              ! Here's our event loop      CALL tw_event(0,type1$,window1,x1,x2)      SELECT CASE type1$      CASE "MENU"        !        ! Note what was selected        !        LET mitem$ = menu$(x1,x2)        LET p = Pos(mitem$,"@")        IF p > 0 then LET mitem$[p:maxnum] = ""   ! strip shortcuts        LET mtitle$ = menu$(x1,0)        IF X1 = 0 AND X2 = 1 THEN          CALL BOX138          LET CYCLEFLAG = 1          EXIT DO        ELSE IF X1 = 1 THEN          FOR K = 1 TO L            IF X2 = K THEN              LET OPTION$ = LIST$(K)            END IF          NEXT K          EXIT DO        ELSE IF X1 = 2 AND COL = 2 THEN          FOR K = 1 TO L            IF X2 = K THEN              LET OPTION$ = LIST2$(K)            END IF          NEXT K          EXIT DO        END IF      CASE "SINGLE"        CALL MACSYSBEEP(1)      CASE "DOUBLE"        CALL MACSYSBEEP(1)      CASE ELSE          !          ! Ignore other events          !      END SELECT    LOOP  LOOP WHILE CYCLEFLAG = 1  CALL TW_MENU_CLEAREND SUB !BOX17!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX19( PLOTRANGE, FRAC, N, KILLSWITCHFLAG, SHOWNFLAG )  DECLARE DEF EVAL  SET CURSOR "ON"  LET MESSAGE$ = "WHAT ZOOM DO YOU WANT ?"  IF N >= 16 THEN    LET NOR = INT(N/4)  ELSE    LET NOR = 4  END IF  IF PLOTRANGE = 2 THEN    LET MESSAGE$ = MESSAGE$ & "|" & "   (A NUMBER BETWEEN  0.5  AND  " & STR$(NOR) & "  INCLUSIVE)"  ELSE IF PLOTRANGE = 1 THEN    LET MESSAGE$ = MESSAGE$ & "|" & "   (A NUMBER BETWEEN  1  AND  " & STR$(NOR) & "  INCLUSIVE)"  END IF  LET BUTTON$ = "GO|QUIT"  LET DEFAULT = 1  LET FRAC = 1  DO    IF  BARF = 1 THEN CALL MACSYSBEEP(1)    DO      LET TEXT$ = STR$(1/FRAC)      CALL TW_DINPUT(MESSAGE$, BUTTON$, DEFAULT, TEXT$, RESULT)      WHEN ERROR IN        IF RESULT = 1 THEN LET FDG = EVAL(TEXT$)        EXIT DO      USE        CALL MACSYSBEEP(1)      END WHEN    LOOP    IF RESULT = 1 THEN      IF FDG >= 1/PLOTRANGE AND FDG <= NOR THEN LET ARF = 1    ELSE IF RESULT = 2 THEN      LET FDG = -1      IF SHOWNFLAG = 0 THEN CLEAR    END IF    LET BARF = 1  LOOP UNTIL ARF = 1 OR RESULT = 2  LET FRAC = 1/FDG  IF KILLSWITCHFLAG = 1 THEN    LET KILLSWITCHFLAG = 0    CALL TW_WKILL( 2 )    CALL TW_WSWITCH( 1 )    DO      CALL tw_event(0,type1$,window1,x1,x2)      LET COUNT = COUNT + 1    LOOP UNTIL COUNT = 5  END IF  SET CURSOR "OFF"END SUB !BOX19!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX49  !ALL VALUES OF THIS VARIABLE ARE ZERO...  CALL MACSYSBEEP(1)  LET MESSAGE$ = "ALL VALUES OF THAT VARIABLE ARE ZERO"  LET MESSAGE$ = MESSAGE$ & "|" & "CANNOT DRAW A PLOT"  LET BUTTON$ = "GO"  LET ICON = 3  LET DEFAULT = 1  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)END SUB !BOX49!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX66( CARD$, COLOR$, OPTION$, ZAZ, PULSESCALE, MODE$, TYPE$, MMENU, X2FLAG, FFT2FLAG, XFLAG, FFTFLAG, IFFTFLAG, REALFLAGX, REALFLAGIFFT )  IF OPTION$ = "A" THEN    IF REALFLAGX = 1 THEN      LET L$ = "X VECTOR"    ELSE IF REALFLAGX = 0 THEN      LET L$ = "REAL PART OF  X  VECTOR"    END IF  ELSE IF OPTION$ = "A2" THEN    IF REALFLAGX = 1 THEN      LET L$ = "X2 VECTOR"    ELSE IF REALFLAGX = 0 THEN      LET L$ = "REAL PART OF  X2  VECTOR"    END IF  ELSE IF OPTION$ = "B" THEN    LET L$ = "IMAGINARY PART OF  X  VECTOR"  ELSE IF OPTION$ = "B2" THEN    LET L$ = "IMAGINARY PART OF  X2  VECTOR"  ELSE IF OPTION$ = "C" THEN    LET L$ = "MODULUS OF  X  VECTOR"  ELSE IF OPTION$ = "C2" THEN    LET L$ = "MODULUS OF  X2  VECTOR"  ELSE IF OPTION$ = "D" THEN    IF PULSESCALE <> 2 THEN      LET L$ = "REAL PART OF  F  VECTOR"    ELSE IF PULSESCALE = 2 THEN      LET L$ = "REAL PART OF  F  VECTOR (WEIGHTS)"    END IF  ELSE IF OPTION$ = "D2" THEN    IF PULSESCALE <> 2 THEN      LET L$ = "REAL PART OF  F2  VECTOR"    ELSE IF PULSESCALE = 2 THEN      LET L$ = "REAL PART OF  F2  VECTOR (WEIGHTS)"    END IF  ELSE IF OPTION$ = "E" THEN    IF PULSESCALE <> 2 THEN      LET L$ = "IMAGINARY PART OF  F  VECTOR"    ELSE IF PULSESCALE = 2 THEN      LET L$ = "IMAGINARY PART OF  F  VECTOR (WEIGHTS)"    END IF  ELSE IF OPTION$ = "E2" THEN    IF PULSESCALE <> 2 THEN      LET L$ = "IMAGINARY PART OF  F2  VECTOR"    ELSE IF PULSESCALE = 2 THEN      LET L$ = "IMAGINARY PART OF  F2  VECTOR (WEIGHTS)"    END IF  ELSE IF OPTION$ = "F" THEN    IF MODE$ = "DISC" THEN      LET L$ = "MODULUS OF  F  VECTOR"    ELSE IF MODE$ = "SAMP" THEN      IF PULSESCALE <> 2 THEN        LET L$ = "MAGNITUDE SPECTRUM (PRIMARY)"      ELSE IF PULSESCALE = 2 THEN        LET L$ = "MAGNITUDE SPECTRUM (PRIMARY, WEIGHTS)"      END IF    END IF  ELSE IF OPTION$ = "F2" THEN    IF MODE$ = "DISC" THEN      LET L$ = "MODULUS OF  F2  VECTOR"    ELSE IF MODE$ = "SAMP" THEN      IF PULSESCALE <> 2 THEN        LET L$ = "MAGNITUDE SPECTRUM (SECONDARY)"      ELSE IF PULSESCALE = 2 THEN        LET L$ = "MAGNITUDE SPECTRUM (SECONDARY, WEIGHTS)"      END IF    END IF  ELSE IF OPTION$ = "G" THEN    IF PULSESCALE <> 2 THEN      LET L$ = "PHASE SPECTRUM (PRIMARY)"    ELSE IF PULSESCALE = 2 THEN      LET L$ = "PHASE SPECTRUM (PRIMARY, WEIGHTS)"    END IF  ELSE IF OPTION$ = "G2" THEN    IF PULSESCALE <> 2 THEN      LET L$ = "PHASE SPECTRUM (SECONDARY)"    ELSE IF PULSESCALE = 2 THEN      LET L$ = "PHASE SPECTRUM (SECONDARY, WEIGHTS)"    END IF  ELSE IF OPTION$ = "H" THEN    IF MODE$ = "DISC" THEN      LET L$ = "MODULUS SQUARED OF  F  VECTOR"    ELSE IF MODE$ = "SAMP" THEN      IF TYPE$ = "PER" THEN        LET L$ = "POWER SPECTRUM (PRIMARY)"      ELSE IF TYPE$ = "PUL" THEN        IF PULSESCALE <> 2 THEN          LET L$ = "ENERGY SPECTRUM (PRIMARY)"        ELSE IF PULSESCALE = 2 THEN          LET L$ = "ENERGY SPECTRUM (PRIMARY, WEIGHTS)"        END IF      END IF    END IF  ELSE IF OPTION$ = "H2" THEN    IF MODE$ = "DISC" THEN      LET L$ = "MODULUS SQUARED OF  F2  VECTOR"    ELSE IF MODE$ = "SAMP" THEN      IF TYPE$ = "PER" THEN        LET L$ = "POWER SPECTRUM (SECONDARY)"      ELSE IF TYPE$ = "PUL" THEN        IF PULSESCALE <> 2 THEN          LET L$ = "ENERGY SPECTRUM (SECONDARY)"        ELSE IF PULSESCALE = 2 THEN          LET L$ = "ENERGY SPECTRUM (SECONDARY, WEIGHTS)"        END IF      END IF    END IF  ELSE IF OPTION$ = "I" THEN    IF REALFLAGIFFT = 1 THEN      LET L$ = "Y VECTOR"    ELSE IF REALFLAGIFFT = 0 THEN      LET L$ = "REAL PART OF  Y  VECTOR"    END IF  ELSE IF OPTION$ = "J" THEN    LET L$ = "IMAGINARY PART OF  Y  VECTOR"  ELSE IF OPTION$ = "K" THEN    LET L$ = "MODULUS OF  Y  VECTOR"  END IF  SET WINDOW 0, 81, 0, 31  LET XX = 40  LET YY = 4  SET TEXT JUSTIFY "CENTER", "BASE"  PLOT TEXT, AT XX, YY: L$END SUB !BOX66!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX11( OPTION4$ )  LET MESSAGE$ = "RUN WHICH POSTPROCESSOR ?"  LET ICON = 2  LET BUTTON$ = "X|F|Y|QUIT"  LET DEFAULT = 0  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)  IF RESULT = 1 THEN    LET OPTION4$ = "X"  ELSE IF RESULT = 2 THEN    LET OPTION4$ = "F"  ELSE IF RESULT = 3 THEN    LET OPTION4$ = "Y"  ELSE IF RESULT = 4 THEN    LET OPTION4$ = "Q"  END IFEND SUB !BOX11!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOX46( PMODE$ )  CALL MACSYSBEEP(1)  IF PMODE$ = "X" THEN    LET MESSAGE$ = "ALL  X  VALUES ARE ZERO ..."    LET MESSAGE$ = MESSAGE$ & "|" & "POINTLESS RUNNING THE  X  POSTPROCESSOR"  ELSE IF PMODE$ = "F" THEN    LET MESSAGE$ = "ALL  F  VALUES ARE ZERO ..."    LET MESSAGE$ = MESSAGE$ & "|" & "POINTLESS RUNNING THE  F  POSTPROCESSOR"  ELSE IF PMODE$ = "Y" THEN    LET MESSAGE$ = "ALL  Y  VALUES ARE ZERO ..."    LET MESSAGE$ = MESSAGE$ & "|" & "POINTLESS RUNNING THE  Y  POSTPROCESSOR"  END IF  LET ICON = 3  LET BUTTON$ = "GO"  LET DEFAULT = 1  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)END SUB !BOX46!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOXXPOST(Z0$, MODE$ )  DIM MENU$(0:1,0:2)       !dimensioning for three menus, APPLE and X-POSTPROCS  DIM CC$(0:1,0:2)         !required later for transposing  DIM LIST$(1)             !to hold the ID list  DIM LIST2$(1)             !to hold the ID list  LET L = 1  LET DIMFLAG = 0  LET MENU$(1,0) = "Info Page..."  LET MENU$(0,1) = "XPOST MENU 1"  LET DIMFLAG = 1  LET MENU$(L,1) = "Copy  X  to  X2"  LET LIST$(L) = "CX"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Copy  X2  to  X"  MAT REDIM LIST$(L)  LET LIST$(L) = "CX2"  LET L = L+1  IF DIMFLAG = 1 THEN MAT REDIM MENU$(0:L,0:2)  LET DIMFLAG = 1  LET MENU$(L,1) = "Copy  X  to  F"  MAT REDIM LIST$(L)  LET LIST$(L) = "CXF"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Copy  F  to  X"  MAT REDIM LIST$(L)  LET LIST$(L) = "CFX"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Copy  Y  to  X"  MAT REDIM LIST$(L)  LET LIST$(L) = "CYX"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Add  X  to  X2"  MAT REDIM LIST$(L)  LET LIST$(L) = "AX"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Add  X2  to  X"  MAT REDIM LIST$(L)  LET LIST$(L) = "AX2"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  X:X2"  MAT REDIM LIST$(L)  LET LIST$(L) = "SW"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  X:X2  F:F2"  MAT REDIM LIST$(L)  LET LIST$(L) = "SWS"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  X:F"  MAT REDIM LIST$(L)  LET LIST$(L) = "SXF"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  X:F  X2:F2"  MAT REDIM LIST$(L)  LET LIST$(L) = "SWO"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Quit @Q"  MAT REDIM LIST$(L)  LET LIST$(L) = "Q" !------------------------------!  LET M = 1  MAT REDIM LIST2$(L)  LET MENU$(0,2) = "XPOST MENU 2"  LET MENU$(M,2) = "Multiply X by a constant"  LET LIST2$(M) = "MX"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Multiply X2 by a constant"  LET LIST2$(M) = "MX2"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Real-mult XRE & X2RE ---> XRE"  LET LIST2$(M) = "RM"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Complex-mult X & X2 ---> X"  LET LIST2$(M) = "CM"  LET M = M+1  IF MODE$ = "SAMP" THEN    IF M > L THEN      MAT REDIM MENU$(0:M,0:2)      MAT REDIM LIST2$(M)    END IF    LET MENU$(M,2) = "Multiply X by exp(j wo t)"    LET LIST2$(M) = "EXP"    LET M = M+1  END IF  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Set  XIM  to zero"  LET LIST2$(M) = "ZI"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Set  XRE  to zero"  LET LIST2$(M) = "ZR"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Sample X"  LET LIST2$(M) = "SX"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Clean X"  LET LIST2$(M) = "CLX"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Clean X2"  LET LIST2$(M) = "CLX2"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Quit @Q"  LET LIST2$(M) = "Q"  LET V = MAX(M,L)  !  !now transposing  !  MAT REDIM CC$(0:2,0:V)  FOR I = 0 TO V    FOR J = 0 TO 2      LET CC$(J,I) = MENU$(I,J)    NEXT J  NEXT I  MAT REDIM MENU$(0:2,0:V)  MAT MENU$ = CC$  DO    LET CYCLEFLAG = 0    CALL TW_menu_set(menu$)       !remove current menus, install menu$    DO           ! Here's our event loop      CALL tw_event(0,type1$,window1,x1,x2)      SELECT CASE type1$      CASE "MENU"        !        ! Note what was selected        !        LET mitem$ = menu$(x1,x2)        LET p = Pos(mitem$,"@")        IF p > 0 then LET mitem$[p:maxnum] = ""   ! strip shortcuts        LET mtitle$ = menu$(x1,0)        IF X1 = 0 AND X2 = 1 THEN          CALL TW_MENU_CLEAR          CALL BOX138          LET CYCLEFLAG = 1        ELSE IF X1 = 1 THEN          FOR K = 1 TO L            IF X2 = K THEN              LET Z0$ = LIST$(K)            END IF          NEXT K        ELSE IF X1 = 2 THEN          FOR K = 1 TO M            IF X2 = K THEN              LET Z0$ = LIST2$(K)            END IF          NEXT K        END IF        EXIT DO      CASE "SINGLE"        CALL MACSYSBEEP(1)      CASE "DOUBLE"        CALL MACSYSBEEP(1)      CASE ELSE          !          ! Ignore other events          !      END SELECT    LOOP  LOOP WHILE CYCLEFLAG = 1  CALL TW_MENU_CLEAREND SUB !BOXXPOST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOXFPOST( Z0$, MODE$, TYPE$ )  DIM MENU$(0:1,0:2)       !dimensioning for three menus, APPLE and F-POSTPROCS  DIM CC$(0:1,0:2)         !required later for transposing  DIM LIST$(1)             !to hold the ID list  DIM LIST2$(1)            !to hold the ID list  LET L = 1  LET DIMFLAG = 0  LET MENU$(1,0) = "Info Page..."  LET MENU$(0,1) = "FPOST MENU 1"  LET DIMFLAG = 1  LET MENU$(L,1) = "Copy  F  to  F2"  LET LIST$(L) = "CF"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Copy  F2  to  F"  MAT REDIM LIST$(L)  LET LIST$(L) = "CF2"  LET L = L+1  IF DIMFLAG = 1 THEN MAT REDIM MENU$(0:L,0:2)  LET DIMFLAG = 1  LET MENU$(L,1) = "Copy  F  to  X"  MAT REDIM LIST$(L)  LET LIST$(L) = "CFX"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Copy  X  to  F"  MAT REDIM LIST$(L)  LET LIST$(L) = "CXF"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Copy  FRE  to  FIM"  MAT REDIM LIST$(L)  LET LIST$(L) = "CFI"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Add  F  to  F2"  MAT REDIM LIST$(L)  LET LIST$(L) = "AF"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Add  F2  to  F"  MAT REDIM LIST$(L)  LET LIST$(L) = "AF2"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  F:F2"  MAT REDIM LIST$(L)  LET LIST$(L) = "SW"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  X:X2  F:F2"  MAT REDIM LIST$(L)  LET LIST$(L) = "SWS"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  X:F"  MAT REDIM LIST$(L)  LET LIST$(L) = "SXF"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  X:F  X2:F2"  MAT REDIM LIST$(L)  LET LIST$(L) = "SWO"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Swop  FRE:FIM"  MAT REDIM LIST$(L)  LET LIST$(L) = "SWI"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Multiply F by a constant"  MAT REDIM LIST$(L)  LET LIST$(L) = "MF"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Multiply F2 by a constant"  MAT REDIM LIST$(L)  LET LIST$(L) = "MF2"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Complex-mult F & F2 ---> F"  MAT REDIM LIST$(L)  LET LIST$(L) = "CM"  LET L = L+1  IF MODE$ = "SAMP" THEN    MAT REDIM MENU$(0:L,0:2)    LET MENU$(L,1) = "Multiply F by exp(j w tau)"    MAT REDIM LIST$(L)    LET LIST$(L) = "EXP"    LET L = L+1  END IF  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "@"  LET L = L+1  MAT REDIM MENU$(0:L,0:2)  LET MENU$(L,1) = "Quit @Q"  MAT REDIM LIST$(L)  LET LIST$(L) = "Q"!-----------------------------------!  LET M = 1  MAT REDIM LIST2$(L)  LET MENU$(0,2) = "FPOST MENU 2"  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Conjugate  F"  LET LIST2$(M) = "CJF"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Conjugate  F2"  LET LIST2$(M) = "CJF2"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Shave  F"  LET LIST2$(M) = "SH"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Low-pass filter  F"  LET LIST2$(M) = "LPF"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "High-pass filter  F"  LET LIST2$(M) = "HPF"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Set  FIM  to zero"  LET LIST2$(M) = "ZI"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Set  FRE  to zero"  LET LIST2$(M) = "ZR"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Backward-diff 1st"  LET LIST2$(M) = "BD"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Forward-diff 1st"  LET LIST2$(M) = "FD"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Central-diff 1st"  LET LIST2$(M) = "CD"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Central-diff 2nd"  LET LIST2$(M) = "CD2"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF MODE$ = "SAMP" THEN    IF M > L THEN      MAT REDIM MENU$(0:M,0:2)      MAT REDIM LIST2$(M)    END IF    IF TYPE$ = "PER" THEN      LET MENU$(M,2) = "Power"    ELSE IF TYPE$ = "PUL" THEN      LET MENU$(M,2) = "Energy"    END IF    LET LIST2$(M) = "EP"    LET M = M+1  END IF  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Sample  F"  LET LIST2$(M) = "SF"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Power  F"  LET LIST2$(M) = "PF"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Lock  F2"  LET LIST2$(M) = "LF2"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)  END IF  LET MENU$(M,2) = "@"  LET M = M+1  IF M > L THEN    MAT REDIM MENU$(0:M,0:2)    MAT REDIM LIST2$(M)  END IF  LET MENU$(M,2) = "Quit @Q"  LET LIST2$(M) = "Q"  LET V = MAX(M,L)  !  !now transposing  !  MAT REDIM CC$(0:2,0:V)  FOR I = 0 TO V    FOR J = 0 TO 2      LET CC$(J,I) = MENU$(I,J)    NEXT J  NEXT I  MAT REDIM MENU$(0:2,0:V)  MAT MENU$ = CC$  DO    LET CYCLEFLAG = 0    CALL TW_menu_set(menu$)       !remove current menus, install menu$    DO           ! Here's our event loop      CALL tw_event(0,type1$,window1,x1,x2)      SELECT CASE type1$      CASE "MENU"        !        ! Note what was selected        !        LET mitem$ = menu$(x1,x2)        LET p = Pos(mitem$,"@")        IF p > 0 then LET mitem$[p:maxnum] = ""   ! strip shortcuts        LET mtitle$ = menu$(x1,0)        IF X1 = 0 AND X2 = 1 THEN          CALL TW_MENU_CLEAR          CALL BOX138          LET CYCLEFLAG = 1        ELSE IF X1 = 1 THEN          FOR K = 1 TO L            IF X2 = K THEN              LET Z0$ = LIST$(K)            END IF          NEXT K        ELSE IF X1 = 2 THEN          FOR K = 1 TO M            IF X2 = K THEN              LET Z0$ = LIST2$(K)            END IF          NEXT K        END IF        EXIT DO      CASE "SINGLE"        CALL MACSYSBEEP(1)      CASE "DOUBLE"        CALL MACSYSBEEP(1)      CASE ELSE          !          ! Ignore other events          !      END SELECT    LOOP  LOOP WHILE CYCLEFLAG = 1  CALL TW_MENU_CLEAREND SUB !BOXFPOST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOXEP( MESSAGE$, QEZ$ )  LET ICON = 2  LET BUTTON$ = "MORE|QUIT"  LET DEFAULT = 1  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)  IF RESULT = 1 THEN    LET QEZ$ = "C"  ELSE IF RESULT = 2 THEN    LET QEZ$ = "Q"  END IFEND SUB !BOXEP!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOXLF2  CALL MACSYSBEEP(1)  LET ICON = 3  LET MESSAGE$ = "NOTHING IN  F2  SO IT CANNOT BE LOCKED"  LET BUTTON$ = "GO"  LET DEFAULT = 1  CALL TW_DWARN(ICON, MESSAGE$, BUTTON$, DEFAULT, RESULT)END SUB !BOXLF2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!SUB BOXYPOST( Z0$ )  DIM MENU$(0:1,0:6)    !dimensioning for two menus, APPLE and YPOST MENU  LET MENU$(0,1) = "Info Page..."  LET MENU$(1,0) = "YPOST MENU"  LET MENU$(1,1) = "Multiply  Y  by a constant"  LET MENU$(1,2) = "Shave  Y"  LET MENU$(1,3) = "Sample  Y"  LET MENU$(1,4) = "Copy  Y  to  X"  LET MENU$(1,5) = "@"  LET MENU$(1,6) = "Quit @Q"  DO    LET CYCLEFLAG = 0    CALL TW_menu_set(menu$)       !remove current menus, install menu$    DO                            ! Here's our event loop      CALL tw_event(0,type1$,window1,x1,x2)      SELECT CASE type1$      CASE "MENU"        !        ! Note what was selected        !        LET mitem$ = menu$(x1,x2)        LET p = Pos(mitem$,"@")        IF p > 0 then LET mitem$[p:maxnum] = ""   ! strip shortcuts        LET mtitle$ = menu$(x1,0)        IF X1 = 0 AND X2 = 1 THEN          CALL TW_MENU_CLEAR          CALL BOX138          CALL TW_menu_set(menu$)          LET CYCLEFLAG = 1        ELSE IF X1 = 1 THEN          IF  X2 = 1 THEN            LET Z0$ = "MY"          ELSE IF X2 = 2 THEN            LET Z0$ = "SH"          ELSE IF X2 = 3 THEN            LET Z0$ = "SY"          ELSE IF X2 = 4 THEN            LET Z0$ = "CYX"          ELSE IF X2 = 6 THEN            LET Z0$ = "Q"          END IF        END IF        EXIT DO      CASE "SINGLE"        CALL MACSYSBEEP(1)      CASE "DOUBLE"        CALL MACSYSBEEP(1)      CASE ELSE          !          ! Ignore other events          !      END SELECT    LOOP  LOOP WHILE CYCLEFLAG = 1  CALL TW_MENU_CLEAREND SUB !BOXYPOST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!